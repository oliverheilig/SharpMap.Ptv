//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ptv.Controls.Map.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class MapLocalization {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal MapLocalization() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Ptv.Controls.Map.Properties.MapLocalization", typeof(MapLocalization).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switch to aerial view.
        /// </summary>
        internal static string AerialViewButton {
            get {
                return ResourceManager.GetString("AerialViewButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move one step back in history.
        /// </summary>
        internal static string HistoryBackButton {
            get {
                return ResourceManager.GetString("HistoryBackButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move one step forward in history.
        /// </summary>
        internal static string HistoryForwardButton {
            get {
                return ResourceManager.GetString("HistoryForwardButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switch to hybrid view.
        /// </summary>
        internal static string HybridViewButton {
            get {
                return ResourceManager.GetString("HybridViewButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switch to standard map view.
        /// </summary>
        internal static string MapViewButton {
            get {
                return ResourceManager.GetString("MapViewButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switch to move mode.
        /// </summary>
        internal static string MoveModeButton {
            get {
                return ResourceManager.GetString("MoveModeButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show or hide the overview map.
        /// </summary>
        internal static string OverviewButton {
            get {
                return ResourceManager.GetString("OverviewButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset map view.
        /// </summary>
        internal static string ResetButton {
            get {
                return ResourceManager.GetString("ResetButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zoom in.
        /// </summary>
        internal static string ZoomInButton {
            get {
                return ResourceManager.GetString("ZoomInButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switch to zoom mode.
        /// </summary>
        internal static string ZoomModeButton {
            get {
                return ResourceManager.GetString("ZoomModeButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zoom out.
        /// </summary>
        internal static string ZoomOutButton {
            get {
                return ResourceManager.GetString("ZoomOutButton", resourceCulture);
            }
        }
    }
}
